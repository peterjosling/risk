<project name="risk" default="dist" basedir=".">
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="bin"/>
  <property name="temp" location="temp"/>
  <property name="dist"  location="dist"/>
  <property name="test"  location="src"/>
  <property name="lib"  location="lib"/>

  <path id="class.path">
    <fileset dir="${lib}">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init" description="compile the source">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" includeantruntime="false">
      <classpath refid="class.path" />
    </javac>
  </target>

  <target name="dist" depends="test,compile" description="generate the distribution">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the jar file -->
    <manifest file="${build}/MANIFEST.MF">
      <attribute name="Main-Class"
                 value="uk.ac.standrews.cs.cs3099.risk.game.Main" />
    </manifest>
    <jar jarfile="${dist}/lib/Risk.jar" basedir="${build}" manifest="${build}/MANIFEST.MF">
      <fileset dir="${build}" includes="**/*.class" />
      <zipgroupfileset dir="${lib}" includes="**/*.jar" />
    </jar>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete dir="${temp}"/>
  </target>

  <target name="test" depends="compile">
      <mkdir dir="${temp}"/>
      <junit printsummary="yes" haltonfailure="yes">

      <classpath>
        <pathelement location="${class.path}"/>
        <pathelement location="${build}"/>
        <pathelement path="${java.class.path}"/>
        <path refid="class.path"/>
      </classpath>

      <formatter type="plain"/>
      <formatter type="xml"/>

      <batchtest fork="true" todir="${temp}">
        <fileset dir="${test}">
          <include name="**/*Test*.java"/>
        </fileset>
      </batchtest>

    </junit>
  </target>
</project>
